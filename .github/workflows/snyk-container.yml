# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# A sample workflow which checks out the code, builds a container
# image using Docker and scans that image for vulnerabilities using
# Snyk. The results are then uploaded to GitHub Security Code Scanning
#
# For more examples, including how to limit scans to only high-severity
# issues, monitor images for newly disclosed vulnerabilities in Snyk and
# fail PR checks for new vulnerabilities, see https://github.com/snyk/actions/

name: Snyk Analysis

on:
  push:
    branches: [ "main" ]
  pull_request:
    # The branches below must be a subset of the branches above
    branches: [ "main" ]
  schedule:
    - cron: '37 7 * * *'

env:
  REGISTRY_IMAGE: gittrekt/jgrpp-dedicated

permissions:
  contents: read

jobs:
  get_latest:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
          fetch-tags: true
      - name: get versions
        id: get_latest
        run: |
          LOCAL_VERSION=$(/usr/bin/git describe --tags --abbrev=0)
          LATEST=$(curl -s -H 'Accept: application/vnd.github.v3+json' https://api.github.com/repos/JGRennison/OpenTTD-patches/releases | jq -cMr '([.[]|select(all(.tag_name; contains("beta")|not))])|.[:1]|.[].tag_name')
          echo "local_version=${LOCAL_VERSION#jgrpp-}" >> $GITHUB_OUTPUT
          echo "latest=${LATEST}" >> $GITHUB_OUTPUT
          echo "latest_short=${LATEST#jgrpp-}" >> $GITHUB_OUTPUT
          echo "latest_gfx=$(curl -s -H 'Accept: application/vnd.github.v3+json' https://api.github.com/repos/OpenTTD/OpenGFX/releases | jq -cMr '([.[]|select(all(.tag_name; contains("beta")|not))])|.[:1]|.[].tag_name')" >> $GITHUB_OUTPUT
    outputs:
      local_version: ${{ steps.get_latest.outputs.local_version }}
      latest: ${{ steps.get_latest.outputs.latest }}
      latest_short: ${{ steps.get_latest.outputs.latest_short }}
      latest_gfx: ${{ steps.get_latest.outputs.latest_gfx }}

  snyk:
    permissions:
      contents: read # for actions/checkout to fetch code
      security-events: write # for github/codeql-action/upload-sarif to upload SARIF results
      actions: read # only required for a private repository by github/codeql-action/upload-sarif to get the Action run status
    runs-on: ubuntu-latest
    needs: get_latest
    steps:
    - name: Checkout local
      uses: actions/checkout@v5

    - name: Checkout OpenTTD-patches
      uses: actions/checkout@v5
      with:
        repository: 'JGRennison/OpenTTD-patches'
        ref: ${{ needs.get_latest.outputs.latest }}
        path: OpenTTD-patches

    - name: Build and load image
      id: build-load
      uses: docker/build-push-action@v5
      with:
        file: Dockerfile
        context: .
        build-args: OPENGFX_VERSION=${{ needs.get_latest.outputs.latest_gfx }}
        pull: true
        cache-from: type=gha
        load: true
        tags: ${{ env.REGISTRY_IMAGE }}

    - name: Run Snyk to check Docker image for vulnerabilities
      continue-on-error: true
      uses: snyk/actions/docker@master
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        image: ${{ env.REGISTRY_IMAGE }}
        args: --file=Dockerfile

    - name: Upload result to GitHub Code Scanning
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: snyk.sarif
